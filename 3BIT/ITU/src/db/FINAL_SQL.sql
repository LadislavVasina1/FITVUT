-- MySQL Script generated by MySQL Workbench 
-- Created by Ladislav Va≈°ina
-- Sat Nov 26 11:51:29 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema smartCity
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema smartCity
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `smartCity` DEFAULT CHARACTER SET utf8 ;
USE `smartCity` ;

-- -----------------------------------------------------
-- Table `smartCity`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`user` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(65) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `authenticated` TINYINT(1) NULL,
  `deactivated` TINYINT(1) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartCity`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`ticket` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`ticket` (
  `ticketId` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT(2048) NOT NULL,
  `state` ENUM('DONE', 'WORK_IN_PROGRESS', 'PLANNED', 'NEW') NOT NULL DEFAULT 'NEW',
  `imagePath` VARCHAR(200) NULL,
  `latitude` FLOAT NOT NULL,
  `tongitude` FLOAT NOT NULL,
  `reporterId` INT NOT NULL,
  `assigneeId` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`ticketId`),
  INDEX `fk_ticket_users1_idx` (`reporterId` ASC) VISIBLE,
  INDEX `fk_ticket_users2_idx` (`assigneeId` ASC) VISIBLE,
  CONSTRAINT `fk_ticket_users1`
    FOREIGN KEY (`reporterId`)
    REFERENCES `smartCity`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_users2`
    FOREIGN KEY (`assigneeId`)
    REFERENCES `smartCity`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartCity`.`serviceTask`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`serviceTask` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`serviceTask` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT(1000) NOT NULL,
  `days_to_complete` INT NULL,
  `state` ENUM('DONE', 'WORK_IN_PROGRESS', 'PLANNED', 'NEW') NOT NULL DEFAULT 'NEW',
  `man_hours` INT NULL DEFAULT 0,
  `creator_id` INT NOT NULL,
  `parent_ticket` INT NOT NULL,
  `cost` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_serviceTask_users1_idx` (`creator_id` ASC) VISIBLE,
  INDEX `fk_serviceTask_ticket1_idx` (`parent_ticket` ASC) VISIBLE,
  CONSTRAINT `fk_serviceTask_users1`
    FOREIGN KEY (`creator_id`)
    REFERENCES `smartCity`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_serviceTask_ticket1`
    FOREIGN KEY (`parent_ticket`)
    REFERENCES `smartCity`.`ticket` (`ticketId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartCity`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`comment` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` TEXT(1000) NOT NULL,
  `createdAt` DATETIME NOT NULL,
  `ticket_id` INT NOT NULL,
  `commenter_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comments_ticket_idx` (`ticket_id` ASC) VISIBLE,
  INDEX `fk_comment_users1_idx` (`commenter_id` ASC) VISIBLE,
  CONSTRAINT `fk_comments_ticket`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `smartCity`.`ticket` (`ticketId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_users1`
    FOREIGN KEY (`commenter_id`)
    REFERENCES `smartCity`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartCity`.`serviceTask_has_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`serviceTask_has_users` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`serviceTask_has_users` (
  `service_task_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`service_task_id`, `user_id`),
  INDEX `fk_serviceTask_has_users_users1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_serviceTask_has_users_serviceTask1_idx` (`service_task_id` ASC) VISIBLE,
  CONSTRAINT `fk_serviceTask_has_users_serviceTask1`
    FOREIGN KEY (`service_task_id`)
    REFERENCES `smartCity`.`serviceTask` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_serviceTask_has_users_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `smartCity`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartCity`.`service_task_comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`service_task_comment` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`service_task_comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `content` TEXT(1000) NOT NULL,
  `createdAt` DATETIME NOT NULL,
  `service_task_id` INT NOT NULL,
  `commenter_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comment_users1_idx` (`commenter_id` ASC) VISIBLE,
  INDEX `fk_service_task_comment_serviceTask1_idx` (`service_task_id` ASC) VISIBLE,
  CONSTRAINT `fk_comment_users10`
    FOREIGN KEY (`commenter_id`)
    REFERENCES `smartCity`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_service_task_comment_serviceTask1`
    FOREIGN KEY (`service_task_id`)
    REFERENCES `smartCity`.`serviceTask` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartCity`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`role` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(80) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `smartCity`.`role_has_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `smartCity`.`role_has_user` ;

CREATE TABLE IF NOT EXISTS `smartCity`.`role_has_user` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`),
  INDEX `fk_role_has_user_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_role_has_user_role1_idx` (`role_id` ASC) VISIBLE,
  CONSTRAINT `fk_role_has_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `smartCity`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `smartCity`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
